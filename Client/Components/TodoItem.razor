@inject TodoService TodoService

@if (_editMode)
{
    <div>
        <input type="text" class="edit-label" @bind="@Todo!.Label" />
        <span class="pointer" @onclick="ToggleEditMode">&#128190;</span>
    </div>
}
else
{
    <div>
        <input type="checkbox" @onclick="StateChange" checked="@Todo!.Complete" id="@($"cb-{Todo!.Id}")">
        <label for="@($"cb-{Todo!.Id}")" class="@(Todo!.Complete ? "complete" : string.Empty)">@Todo!.Label</label>
        <span @onclick="ToggleEditMode">🖋</span>
    </div>
}

@code {
    [Parameter]
    [EditorRequired]
    public Todo? Todo { get; set; }

    private bool _editMode = false;

    private async void StateChange()
    {
        Todo!.Complete = !Todo.Complete;
        await TodoService.UpdateTodo(Todo);
    }

    private async Task ToggleEditMode()
    {
        if (_editMode)
        {
            if (string.IsNullOrWhiteSpace(Todo!.Label))
            {
                return;
            }

            await TodoService.UpdateTodo(Todo);
        }

        _editMode = !_editMode;
    }
}

